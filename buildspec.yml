version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 16  # Just use Node.js runtime
    commands:
      # Check which Linux distribution is running
      - cat /etc/*release
      
      # Install PHP 8.0 on Amazon Linux 2
      - echo "Installing PHP 8.0..."
      - amazon-linux-extras enable php8.0
      - yum clean metadata
      - yum install -y php php-cli php-common php-curl php-mbstring php-xml php-zip php-mysql php-gd
      
      # Verify PHP installation
      - php -v
      
      # Install Composer
      - echo "Installing Composer..."
      - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      - composer --version
      
  pre_build:
    commands:
      # Run any checks before build
      - echo "Running pre-build checks..."
      - php -v
      
      # Install dependencies
      - echo "Installing project dependencies..."
      - composer install --no-interaction --no-progress || echo "Composer install failed, continuing build"
      - npm ci || npm install
      
  build:
    commands:
      # Run tests
      - echo "Running tests..."
      - vendor/bin/phpunit --log-junit test-reports/junit.xml || echo "Tests failed but continuing build"
      
      # Build assets (if using webpack, vite, etc.)
      - echo "Building assets..."
      - npm run build || echo "Asset build failed, continuing deployment"
      
  post_build:
    commands:
      # Generate any deployment artifacts
      - echo "Build completed on $(date)"
      - cp .env.example .env || echo "No .env.example file found"
      - if [ -f artisan ]; then php artisan config:cache || echo "Laravel command failed"; fi

artifacts:
  files:
    - appspec.yml
    - .env
    - app/**/*
    - bootstrap/**/*
    - config/**/*
    - database/**/*
    - public/**/*
    - resources/**/*
    - routes/**/*
    - storage/**/*
    - vendor/**/*
    - composer.json
    - composer.lock
    - artisan
    - "**/*"  # Include all files
  discard-paths: no
  base-directory: '.'

cache:
  paths:
    - vendor/**/*
    - node_modules/**/*

reports:
  phpunit-reports:
    files:
      - test-reports/junit.xml
    file-format: JUNITXML